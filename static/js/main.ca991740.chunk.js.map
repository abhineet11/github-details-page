{"version":3,"sources":["service.js","actions/index.js","Epics/Pages/Components/UserInfo/index.js","actions/constant.js","Epics/Pages/Components/UserRepoList/index.js","Epics/Pages/home.js","App.js","reducers/userDetails.js","reducers/rootReducer.js","store.js","serviceWorker.js","index.js"],"names":["url","axios","get","baseURL","UserInfo","this","props","getProfileData","userInfo","data","isLoading","className","src","avatar_url","alt","name","login","bio","aria-hidden","company","location","email","Component","connect","state","userDetails","dispatch","type","api","then","res","value","catch","err","colorMapping","HTML","JavaScript","CSS","UserRepoList","repoData","filterType","search","inputSearchHandler","dataArr","filter","obj","i","toLowerCase","startsWith","filterSelectedVal","key","typeChange","val","filterData","filterHandler","userRepoDetails","selectData","searchData","setState","onFilterChange","e","target","clearFilter","getUserRepoDetails","nextProps","placeholder","onChange","length","onClick","class","map","href","html_url","rel","description","language","style","backgroundColor","fork","forks","watchers_count","moment","updated_at","format","Home","App","initialState","combineReducers","action","store","createStore","rootReducer","applyMiddleware","thunk","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca991740.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    getData(url) {\n        return axios.get(url)\n      } \n};","import api from \"../service\";\nimport {PROFILE_DATA_LOADING, PROFILE_DATA_SUCCESS, USER_REPO_DATA_LOADING, USER_REPO_DATA_SUCCESS} from './constant'\nconst baseURL = \"https://api.github.com\"\n\nexport const getProfileData = () => dispatch => {\n  dispatch({ type: PROFILE_DATA_LOADING });\n  return api\n    .getData(`${baseURL}/users/supreetsingh247`)\n    .then(res => {\n        return dispatch({\n          type: PROFILE_DATA_SUCCESS,\n          value: res.data\n        });\n    })\n    .catch(err => {\n     \n    });\n};\n\nexport const getUserRepoDetails = () => dispatch => {\n  dispatch({ type: USER_REPO_DATA_LOADING });\n  return api\n    .getData(`${baseURL}/users/supreetsingh247/repos`)\n    .then(res => {\n        return dispatch({\n          type: USER_REPO_DATA_SUCCESS,\n          value: res.data\n        });\n    })\n    .catch(err => {\n     \n    });\n};","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProfileData } from \"../../../../actions/index\";\nimport './index.css'\n\nclass UserInfo extends Component {\n  componentDidMount() {\n    this.props.getProfileData();\n  }\n\n  render() {\n    const { data, isLoading } = this.props.userInfo;\n    if (isLoading) return <>Loading...</>;\n    return (\n      <>\n        {!isLoading && (\n          <div className=\"userinfo-container\">\n            <div className=\"user-desc-container\">\n                <div className=\"user-image\">\n                    <img src={data.avatar_url} className=\"avatar\" alt=\"avatar\"/>\n                </div>\n                <div className=\"user-name-container p15\">\n                    <h2>{data.name}</h2>\n                    <p>{data.login}</p>\n                </div>\n            </div>\n              <button className=\"btn btn-primary mb15\">Follow</button>\n              <div className=\"user-profile-container\"> \n                  <div className=\"user-bio\">\n                      <p>{data.bio}</p>\n                  </div>\n                  <div className=\"user-details\">\n                      <p><i className=\"fa fa-building-o\" aria-hidden=\"true\"></i>{data.company}</p>\n                      <p><i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i>{data.location}</p>\n                      {data.email && <p><i className=\"fa fa-envelope-o\" aria-hidden=\"true\"></i>{data.email }</p>}\n                  </div>\n              </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getProfileData: () => dispatch(getProfileData()),\n});\n\nconst mapStateToProps = (state) => ({\n  userInfo: state.userDetails.userInfo,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserInfo);\n","export const PROFILE_DATA_LOADING = 'PROFILE_DATA_LOADING';\nexport const PROFILE_DATA_SUCCESS = 'PROFILE_DATA_SUCCESS';\nexport const USER_REPO_DATA_LOADING = 'USER_REPO_DATA_LOADING';\nexport const USER_REPO_DATA_SUCCESS = 'USER_REPO_DATA_SUCCESS';","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUserRepoDetails } from \"../../../../actions/index\";\nimport moment from \"moment\";\nimport \"./index.css\";\n\nconst colorMapping = {\n  HTML: \"#e34c26\",\n  JavaScript: \"#f1e05a\",\n  CSS: \"#563d7c\",\n};\n\nclass UserRepoList extends Component {\n  state = {\n    repoData: [],\n    filterType: \"All\",\n    search: \"\",\n  };\n  componentDidMount() {\n    this.props.getUserRepoDetails();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.userRepoDetails.data !== this.props.userRepoDetails.data) {\n      this.setState({ repoData: nextProps.userRepoDetails.data });\n    }\n  }\n\n  inputSearchHandler = (value, dataArr) => {\n    if (value === \"\") {\n      return dataArr;\n    } else {\n      const filterArr = dataArr.filter((obj, i) =>\n        obj.name.toLowerCase().startsWith(value.toLowerCase())\n      );\n      return filterArr;\n    }\n  };\n\n  filterSelectedVal = (key, data) => {\n    return data.filter((obj, i) => obj[key]);\n  };\n\n  typeChange = (val, dataArr) => {\n    let filterData;\n    switch (val) {\n      case \"All\":\n        filterData = dataArr;\n        break;\n      case \"forked\":\n        filterData = this.filterSelectedVal(\"fork\", dataArr);\n        break;\n      case \"archived\":\n        filterData = this.filterSelectedVal(\"archived\", dataArr);\n        break;\n      case \"mirror\":\n        filterData = this.filterSelectedVal(\"mirror_url\", dataArr);\n        break;\n      default:\n        filterData = dataArr;\n        break;\n    }\n    return filterData;\n  };\n\n  filterHandler = () => {\n    const { data } = this.props.userRepoDetails;\n    const { filterType, search } = this.state;\n    const selectData = this.typeChange(filterType, data);\n    const searchData = this.inputSearchHandler(search, selectData);\n    this.setState({\n      repoData: searchData,\n    });\n  };\n\n  //called on change of a search or select filter\n  onFilterChange = (e, type) => {\n    this.setState(\n      {\n        [type]: e.target.value,\n      },\n      () => this.filterHandler()\n    );\n  };\n\n  // clear filter\n  clearFilter = () => {\n    this.setState(\n      {\n        search: '',\n        filterType: 'All'\n      },\n      () => this.filterHandler()\n    );\n  }\n\n  render() {\n    const { repoData, filterType, search } = this.state;\n    return (\n      <div className=\"repolist-container\">\n        {/* tabs component */}\n        <div className=\"tab\">\n          <button className=\"tablinks\">Overview</button>\n          <button className=\"tablinks active\">\n            Repositories <span className=\"counter\">12</span>\n          </button>\n          <button className=\"tablinks\">\n            Projects <span className=\"counter\">0</span>\n          </button>\n          <button className=\"tablinks\">\n            Stars <span className=\"counter\">7</span>\n          </button>\n          <button className=\"tablinks\">\n            Followers <span className=\"counter\">6</span>\n          </button>\n          <button className=\"tablinks\">\n            Following <span className=\"counter\">2</span>\n          </button>\n        </div>\n        {/* filter component */}\n        <div className=\"filter-container p15\">\n          <div className=\"search-container\">\n            <input\n              type=\"text\"\n              placeholder=\"Find a repository...\"\n              value={search}\n              onChange={(e) => this.onFilterChange(e, \"search\")}\n            />\n          </div>\n          <div className=\"select-container\">\n            <div className=\"select-section\">\n              <select\n                className=\"btn btn-primary\"\n                value={filterType}\n                onChange={(e) => this.onFilterChange(e, \"filterType\")}\n              >\n                <option value=\"All\">All</option>\n                <option value=\"source\">Sources</option>\n                <option value=\"forked\">Forks</option>\n                <option value=\"archived\">Archived</option>\n                <option value=\"mirror\">Mirrors</option>\n              </select>\n            </div>\n            <div>\n              <select className=\"btn btn-primary\">\n                <option>All</option>\n              </select>\n            </div>\n          </div>\n          \n        </div>\n\n        {(search !== \"\" || filterType !== \"All\") && (\n          <div className=\"filter-result\">\n            <div className=\"result-section\">\n                <strong>{repoData.length}</strong> result\n                {filterType !== \"All\" && <>for <strong>{filterType}</strong></>} repositories\n                {search !== \"\" && <> matching <strong>{search}</strong></>}\n            </div>\n            <div className=\"clear-filter\" onClick={this.clearFilter}>\n                <i class=\"fa fa-window-close\" aria-hidden=\"true\"></i> Clear filter \n            </div>\n          </div>\n        )}\n        {/* Details component */}\n        <div className=\"card-container\">\n          {repoData.map((obj, i) => (\n            <div className=\"card p25\" key={i}>\n              <div className=\"card-left-section\">\n                <div className=\"card-name\">\n                  <h3>\n                    <a href={obj.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {obj.name}\n                    </a>\n                  </h3>\n                </div>\n                <div className=\"card-description\">\n                  <p>{obj.description}</p>\n                </div>\n                <div className=\"card-details\">\n                  {obj.language && (\n                    <p className=\"mr15\">\n                      <span\n                        className=\"card-language-color\"\n                        style={{\n                          backgroundColor: colorMapping[obj.language],\n                        }}\n                      ></span>\n                      {obj.language}\n                    </p>\n                  )}\n                  {obj.fork && (\n                    <p className=\"mr15\">\n                      <i className=\"fa fa-code-fork\" aria-hidden=\"true\"></i>\n                      {obj.forks}\n                    </p>\n                  )}\n                  {obj.watchers_count > 0 && (\n                    <p className=\"mr15\">\n                      <i className=\"fa fa-star-o\" aria-hidden=\"true\"></i>\n                      {obj.watchers_count}\n                    </p>\n                  )}\n                  <p className=\"mr15\">\n                    Updated on {moment(obj.updated_at).format(\"ll\")}\n                  </p> \n                </div>\n              </div>\n              <div>\n                <button className=\"btn btn-primary\">\n                  <i className=\"fa fa-star-o\" aria-hidden=\"true\"></i> Star\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUserRepoDetails: () => dispatch(getUserRepoDetails()),\n});\n\nconst mapStateToProps = (state) => ({\n  userRepoDetails: state.userDetails.userRepoDetails,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRepoList);\n","import React, { Component } from \"react\";\nimport './home.css'\nimport UserInfo from \"./Components/UserInfo\";\nimport UserRepoList from \"./Components/UserRepoList\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"mt30 flex-container pl15 pr15\">\n        <UserInfo />\n        <UserRepoList />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react'\nimport './App.css'\nimport Home from './Epics/Pages/home'\nfunction App () {\n  return ( \n      <div className=\"container\">\n        <Home />\n      </div>\n  )\n}\n\nexport default App\n","const initialState = {\n  userInfo: {\n    isLoading: true,\n    data: {}\n  },\n  userRepoDetails: {\n    isLoading: false,\n    data: []\n  }\n \n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case 'PROFILE_DATA_LOADING':\n      return {\n        ...state,\n        userInfo: {\n          ...state.userInfo,\n          isLoading: true\n        }\n        \n      }\n\n    case 'PROFILE_DATA_SUCCESS':\n        return {\n          ...state,\n          userInfo: {\n            ...state.userInfo,\n            isLoading: false,\n            data: {...action.value}\n          }\n      }\n\n      case 'USER_REPO_DATA_LOADING':\n        return {\n          ...state,\n          userRepoDetails: {\n            ...state.userRepoDetails,\n            isLoading: true\n          }\n          \n        }\n\n      case 'USER_REPO_DATA_SUCCESS':\n          return {\n            ...state,\n            userRepoDetails: {\n              ...state.userRepoDetails,\n              isLoading: false,\n              data: [...action.value]\n            }\n          }\n    \n    \n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport userDetails from './userDetails'\n\n\nexport default combineReducers({\n  userDetails\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/rootReducer'\n\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}